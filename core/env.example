# Bella's Reef Core Service Environment Configuration
# Copy this file to .env and update with your actual values
# This file must be located at /core/.env (NOT project root)

# =============================================================================
# SECURITY WARNING: Change these values in production!
# =============================================================================

# Service Authentication
SERVICE_TOKEN=c806a2d55148a01b549f10b5a888e6bf0aa693be51ee88c80a1f3ed3e48b9266
# Example: SERVICE_TOKEN=da39a3ee5e6b4b0d3255bfef95601890afd80709 (openssl rand -hex 32)

# Database Configuration
DATABASE_URL=postgresql://postgres:postgres@localhost:5432/bellasreef

# Security Settings
SECRET_KEY=ebdf618a4bbfcfd291904205ee8db773c4f5b2994e8cf6f310724da422dc37cf
# Example: SECRET_KEY=8ba09551ad1fc8309a9e9b908cc1c4a47bcd67e6d7fd82c7e5c9896d5fa8c19a

ACCESS_TOKEN_EXPIRE_MINUTES=60

# CORS Settings
# ALLOWED_HOSTS=*
# Or for production:
# ALLOWED_HOSTS=["https://myreefapp.com", "https://api.myreefapp.com"]
ALLOWED_HOSTS=*

# Service Configuration
SERVICE_PORT=8000
SERVICE_HOST=0.0.0.0

# ⚠️  WARNING: Change admin credentials for production! ⚠️
ADMIN_USERNAME=admin
ADMIN_PASSWORD=reefrocks
ADMIN_EMAIL=admin@example.com

# =============================================================================
# DEPLOYMENT CHECKLIST:
# 1. Change SECRET_KEY to a secure random value
# 2. Update DATABASE_URL with your PostgreSQL credentials
# 3. Set SERVICE_TOKEN to a secure value shared across services
# 4. Configure ALLOWED_HOSTS for your deployment environment
# 5. Ensure PostgreSQL is running and accessible
# 6. Run 'python ../scripts/init_db.py' to initialize database
# =============================================================================
# If you see database errors on startup, re-run: python ../scripts/init_db.py
