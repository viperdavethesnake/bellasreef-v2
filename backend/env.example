# =============================================================================
# Bella's Reef - Environment Configuration
# =============================================================================
# Copy this file to .env and update values for your environment
# cp env.example .env

# =============================================================================
# PROJECT INFO
# =============================================================================
# These are typically not changed unless you're customizing the application
PROJECT_NAME="Bella's Reef"
VERSION="1.0.0"
API_V1_STR="/api/v1"

# =============================================================================
# ENVIRONMENT & DEBUG
# =============================================================================
# Set to: development, testing, or production
ENV=development
DEBUG=true
LOG_LEVEL=INFO

# =============================================================================
# SECURITY (REQUIRED - CHANGE IN PRODUCTION)
# =============================================================================
# Generate a secure secret key: python -c "import secrets; print(secrets.token_urlsafe(32))"
# Must be at least 32 characters long
SECRET_KEY=your-super-secret-key-change-this-in-production-minimum-32-chars

# JWT token expiration time in minutes (default: 7 days)
ACCESS_TOKEN_EXPIRE_MINUTES=10080

# =============================================================================
# DATABASE CONFIGURATION (REQUIRED)
# =============================================================================
# PostgreSQL connection settings
POSTGRES_SERVER=localhost
POSTGRES_USER=postgres
POSTGRES_PASSWORD=your-database-password
POSTGRES_DB=bellasreef
POSTGRES_PORT=5432

# =============================================================================
# ADMIN USER (REQUIRED - CHANGE IN PRODUCTION)
# =============================================================================
# Default admin user created during database initialization
# Change these values in production for security
ADMIN_USERNAME=admin
ADMIN_PASSWORD=reefrocks
ADMIN_EMAIL=admin@example.com
ADMIN_PHONE=+15555555555

# =============================================================================
# HARDWARE CONFIGURATION
# =============================================================================
# PWM (Pulse Width Modulation) settings for controlling lights, pumps, etc.
PWM_FREQUENCY=1000
PWM_CHANNELS=16
SENSOR_POLL_INTERVAL=60

# Raspberry Pi Platform Selection
# Options: auto, legacy, rpi5, none
# - auto: Automatically detect Pi model
# - legacy: Force RPi.GPIO (Pi 4 and earlier)
# - rpi5: Force Pi 5 RP1 GPIO
# - none: Disable RPi PWM (for development/testing)
RPI_PLATFORM=auto

# PCA9685 I2C PWM Controller (Optional)
# Address in hexadecimal format
PCA9685_ADDRESS=0x40
# PWM frequency for PCA9685 controller
PCA9685_FREQUENCY=1000

# =============================================================================
# CORS (Cross-Origin Resource Sharing)
# =============================================================================
# In production, replace with your frontend domain(s)
# Multiple origins can be separated by commas
CORS_ORIGINS=["http://localhost", "http://localhost:8000", "http://localhost:3000"]

# =============================================================================
# EMAIL CONFIGURATION (Optional - Future Alerting)
# =============================================================================
# SMTP settings for email notifications (not yet implemented)
SMTP_TLS=true
SMTP_PORT=587
SMTP_HOST=
SMTP_USER=
SMTP_PASSWORD=
EMAILS_FROM_EMAIL=
EMAILS_FROM_NAME=

# =============================================================================
# PRODUCTION CHECKLIST
# =============================================================================
# Before deploying to production, ensure you have:
# ✅ Changed SECRET_KEY to a secure random string
# ✅ Updated ADMIN_USERNAME and ADMIN_PASSWORD
# ✅ Set ENV=production
# ✅ Set DEBUG=false
# ✅ Updated CORS_ORIGINS with your frontend domain
# ✅ Configured proper database credentials
# ✅ Set appropriate LOG_LEVEL (WARNING or ERROR for production)
# ✅ Configured hardware settings for your specific setup 